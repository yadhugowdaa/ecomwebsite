version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: lunox-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres_password
      POSTGRES_DB: lunox_users
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - lunox-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MongoDB Database
  mongo:
    image: mongo:7
    container_name: lunox-mongo
    environment:
      MONGO_INITDB_DATABASE: lunox_catalog
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - lunox-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: lunox-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - lunox-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # User Service
  user-service:
    image: node:18-alpine
    container_name: lunox-user-service
    working_dir: /app
    environment:
      NODE_ENV: development
      USER_SERVICE_PORT: 4000
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: lunox_users
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres_password
      JWT_SECRET: your_jwt_secret_key_change_this_in_production
      JWT_EXPIRES_IN: 7d
      REDIS_HOST: redis
      REDIS_PORT: 6379
      CORS_ORIGIN: http://localhost:3000
    ports:
      - "4000:4000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - lunox-network
    volumes:
      - ./backend/user-service:/app
      - /app/node_modules
    command: sh -c "npm install && npm run dev"

  # Catalog Service
  catalog-service:
    image: node:18-alpine
    container_name: lunox-catalog-service
    working_dir: /app
    environment:
      NODE_ENV: development
      CATALOG_SERVICE_PORT: 4001
      MONGODB_URI: mongodb://mongo:27017/lunox_catalog
      MONGODB_DB: lunox_catalog
      CORS_ORIGIN: http://localhost:3000
    ports:
      - "4001:4001"
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - lunox-network
    volumes:
      - ./backend/catalog-service:/app
      - /app/node_modules
    command: sh -c "npm install && npm run dev"

  # Order Service
  order-service:
    image: node:18-alpine
    container_name: lunox-order-service
    working_dir: /app
    environment:
      NODE_ENV: development
      ORDER_SERVICE_PORT: 4002
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: lunox_users
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres_password
      REDIS_HOST: redis
      REDIS_PORT: 6379
      PAYMENT_GATEWAY_KEY: your_payment_gateway_key
      PAYMENT_GATEWAY_SECRET: your_payment_gateway_secret
      CORS_ORIGIN: http://localhost:3000
    ports:
      - "4002:4002"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - lunox-network
    volumes:
      - ./backend/order-service:/app
      - /app/node_modules
    command: sh -c "npm install && npm run dev"

  # Frontend (Next.js)
  frontend:
    image: node:18-alpine
    container_name: lunox-frontend
    working_dir: /app
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:4000
      NEXT_PUBLIC_CATALOG_API_URL: http://localhost:4001
      NEXT_PUBLIC_ORDER_API_URL: http://localhost:4002
    ports:
      - "3000:3000"
    depends_on:
      - user-service
      - catalog-service
      - order-service
    networks:
      - lunox-network
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    command: sh -c "npm install && npm run dev"

volumes:
  postgres_data:
  mongo_data:
  redis_data:

networks:
  lunox-network:
    driver: bridge


